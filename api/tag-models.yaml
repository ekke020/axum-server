components:
  schemas:
    EntityKind:
      title: EntityKind
      type: string
      enum:
        - STORE
        - PRODUCT
        - USER
        - CATEGORY
      description: The type of entity.
    Tag:
      title: Tag
      type: object
      description: object describing a tag
      required:
        - tag
        - isStoreTag
        - locked
      properties:
        tag:
          type: string
          description: The tag value
          example: tag-1
        id:
          type: string
          description: The id of the tag
          example: 123
        isStoreTag:
          type: boolean
          description: Whether the tag is store tag or not
          example: false
        storeId:
          type: string
          description: The store id associated with the tag
          example: 123
        locked:
          type: boolean
          description: Whether the tag is locked
          example: false
        entities:
          type: array
          description: The entities associated with the tag
          items:
            $ref: '#/components/schemas/Entity'
    Entity:
      title: Entity
      type: object
      description: An Entity
      required:
        - id
        - kind
      properties:
        id:
          type: string
          description: The id of the entity
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
          x-pattern-message: 'Entity Id must be a valid UUID'
        kind:
          $ref: '#/components/schemas/EntityKind'
        name:
          type: string
          description: If the entity is a store, this is the name of the store
          example: Store Name
responses:
  GetTagResponse:
    description: ""
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/Tag'
requests:
  CreateTagRequest:
    description: Creating a tag
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/Tag'